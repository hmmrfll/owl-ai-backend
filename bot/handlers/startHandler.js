// bot/handlers/startHandler.js
const userService = require('../../services/userService');
const messages = require('../../templates/messages');

// –°–æ–∑–¥–∞–µ–º —Ñ–∞–±—Ä–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
function createStartHandler(bot) {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    async function handleStart(msg) {
        const chatId = msg.chat.id;
        const userId = msg.from.id;
        const firstName = msg.from.first_name || '';
        const lastName = msg.from.last_name || '';
        const username = msg.from.username || '';
        const languageCode = msg.from.language_code || 'ru';

        try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î
            await userService.saveUser({
                user_id: userId,
                chat_id: chatId,
                first_name: firstName,
                last_name: lastName,
                username: username,
                language_code: languageCode,
                joined_at: new Date()
            });

            // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            const welcomeMessage = messages.getWelcomeMessage(firstName);

            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
            const keyboard = {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: 'üí≥ –•–æ—á—É –≤–∑—è—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'subscription_menu' }]
                    ]
                },
                parse_mode: 'Markdown'
            };

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            bot.sendMessage(chatId, welcomeMessage, keyboard);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start:', error);
            bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }

    return handleStart;
}

module.exports = createStartHandler;